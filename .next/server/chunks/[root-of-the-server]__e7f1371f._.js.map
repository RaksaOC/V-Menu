{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/model/Order.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst OrderSchema = new mongoose.Schema({\n    table: {type: String,},\n    orderedItems: [],\n    orderedAt: { type: Date, default: Date.now() },\n    isDone: { type: Boolean, default: false }\n})\n\nexport const Order = mongoose.model('Order', OrderSchema, \"orders\") || mongoose.models.Order;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACpC,OAAO;QAAC,MAAM;IAAO;IACrB,cAAc,EAAE;IAChB,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAG;IAC7C,QAAQ;QAAE,MAAM;QAAS,SAAS;IAAM;AAC5C;AAEO,MAAM,QAAQ,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS,aAAa,aAAa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\"\n\nlet isConnected = false // track the connection status\n\nexport const connectToDB = async () => {\n    if (isConnected) return\n\n    try {\n        await mongoose.connect(\"mongodb+srv://ocraksa:MyMongo123@cluster0.xdar3x8.mongodb.net/v_menu?retryWrites=true&w=majority&appName=Cluster0\", {\n            useNewUrlParser: true,\n            useUnifiedTopology: true,\n        } as any) // casting to `any` if TS complains\n\n        isConnected = true\n        console.log(\"✅ MongoDB connected\")\n    } catch (err) {\n        console.error(\"❌ MongoDB connection error:\", err)\n        throw err\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,cAAc,MAAM,8BAA8B;;AAE/C,MAAM,cAAc;IACvB,IAAI,aAAa;IAEjB,IAAI;QACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,qHAAqH;YACxI,iBAAiB;YACjB,oBAAoB;QACxB,GAAU,mCAAmC;;QAE7C,cAAc;QACd,QAAQ,GAAG,CAAC;IAChB,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/api/kitchen/service.ts"],"sourcesContent":["import {Order} from \"@/app/shared/model/Order\";\nimport {connectToDB} from \"@/app/shared/lib/db\";\n\nexport async function fetchOrders(){\n    await connectToDB();\n    const result = await Order.find();\n    return result;\n}\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe;IAClB,MAAM,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD;IAChB,MAAM,SAAS,MAAM,wIAAA,CAAA,QAAK,CAAC,IAAI;IAC/B,OAAO;AACX","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/api/kitchen/route.ts"],"sourcesContent":["import {fetchOrders} from \"@/app/api/kitchen/service\";\nimport {NextRequest, NextResponse} from \"next/server\";\n\n\nexport async function GET() {\n    try {\n        const result = await fetchOrders();\n        return NextResponse.json(result);\n    } catch (err) {\n        return NextResponse.json({error: 'Something went wrong'}, {status: 500})\n    }\n}\n\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,eAAe;IAClB,IAAI;QACA,MAAM,SAAS,MAAM,CAAA,GAAA,yIAAA,CAAA,cAAW,AAAD;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,KAAK;QACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,OAAO;QAAsB,GAAG;YAAC,QAAQ;QAAG;IAC1E;AACJ","debugId":null}}]
}