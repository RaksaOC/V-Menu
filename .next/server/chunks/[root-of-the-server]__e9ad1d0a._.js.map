{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/model/TableOrder.ts"],"sourcesContent":["import mongoose from \"mongoose\";\nimport {Order} from \"./Order\";\n\nconst TableOrderSchema = new mongoose.Schema({\n    table: {\n        type: String,\n        required: true\n    },\n    orders: [\n        {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: \"Order\",\n        }\n    ],\n    isPayed: {\n        type: Boolean,\n        default: false\n    }\n});\n\nexport const TableOrder = mongoose.models.TableOrder || mongoose.model(\"TableOrder\", TableOrderSchema, \"table_orders\");\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,mBAAmB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACzC,OAAO;QACH,MAAM;QACN,UAAU;IACd;IACA,QAAQ;QACJ;YACI,MAAM,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ;YACpC,KAAK;QACT;KACH;IACD,SAAS;QACL,MAAM;QACN,SAAS;IACb;AACJ;AAEO,MAAM,aAAa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,UAAU,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,cAAc,kBAAkB","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/model/Order.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst OrderSchema = new mongoose.Schema({\n    table: {type: String,},\n    orderedItems: [],\n    orderedAt: { type: Date, default: Date.now() },\n    isDone: { type: Boolean, default: false }\n})\n\nexport const Order = mongoose.model('Order', OrderSchema, \"orders\") || mongoose.models.Order;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACpC,OAAO;QAAC,MAAM;IAAO;IACrB,cAAc,EAAE;IAChB,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAG;IAC7C,QAAQ;QAAE,MAAM;QAAS,SAAS;IAAM;AAC5C;AAEO,MAAM,QAAQ,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS,aAAa,aAAa,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/model/Table.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst tableSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: true,\n        unique: true\n    },\n    isEnabled: {\n        type: Boolean,\n        default: true\n    }\n});\n\nexport const Table = mongoose.models.Table || mongoose.model(\"Table\", tableSchema);"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACpC,MAAM;QACF,MAAM;QACN,UAAU;QACV,QAAQ;IACZ;IACA,WAAW;QACP,MAAM;QACN,SAAS;IACb;AACJ;AAEO,MAAM,QAAQ,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/model/Item.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst ItemSchema = new mongoose.Schema({\n    name: { type: String, required: true },\n    price: { type: Number, required: true },\n    image: { type: String, required: true },\n    isEnabled: { type: Boolean, default: true }\n})\n\nexport const Item = mongoose.models.Item || mongoose.model(\"Item\", ItemSchema);\n\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,WAAW;QAAE,MAAM;QAAS,SAAS;IAAK;AAC9C;AAEO,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\"\n\nlet isConnected = false // track the connection status\n\nexport const connectToDB = async () => {\n    if (isConnected) return\n\n    try {\n        await mongoose.connect(\"mongodb+srv://ocraksa:MyMongo123@cluster0.xdar3x8.mongodb.net/v_menu?retryWrites=true&w=majority&appName=Cluster0\", {\n            useNewUrlParser: true,\n            useUnifiedTopology: true,\n        } as any) // casting to `any` if TS complains\n\n        isConnected = true\n        console.log(\"✅ MongoDB connected\")\n    } catch (err) {\n        console.error(\"❌ MongoDB connection error:\", err)\n        throw err\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,cAAc,MAAM,8BAA8B;;AAE/C,MAAM,cAAc;IACvB,IAAI,aAAa;IAEjB,IAAI;QACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,qHAAqH;YACxI,iBAAiB;YACjB,oBAAoB;QACxB,GAAU,mCAAmC;;QAE7C,cAAc;QACd,QAAQ,GAAG,CAAC;IAChB,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/api/cashier/dashboard/overview/route.ts"],"sourcesContent":["import {NextResponse} from \"next/server\";\nimport {TableOrder} from \"@/app/shared/model/TableOrder\";\nimport {Order} from \"@/app/shared/model/Order\";\nimport {Table} from \"@/app/shared/model/Table\";\nimport {Item} from \"@/app/shared/model/Item\";\nimport {connectToDB} from \"@/app/shared/lib/db\";\nimport {Overview} from \"@/app/shared/types/Overview\";\n\nexport async function GET() {\n    try {\n        await connectToDB();\n        const numOfActiveTables = await Table.countDocuments({isEnabled: true});\n        const numOfUnpaidOrders = await TableOrder.countDocuments({isPaid: false});\n        const numOfTables = await Table.countDocuments();\n        const numOfItems = await Item.countDocuments();\n        const numOfOrders = await Order.countDocuments();\n        const numOfPayments = await TableOrder.countDocuments({isPaid: true});\n\n        const overviewData: Overview = {\n            numOfActiveTables,\n            numOfUnpaidOrders,\n            numOfTables,\n            numOfItems,\n            numOfOrders,\n            numOfPayments,\n        }\n\n        return NextResponse.json(overviewData);\n\n    } catch (err: any) {\n        return NextResponse.json({message: err.message}, {status: 500});\n    }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAGO,eAAe;IAClB,IAAI;QACA,MAAM,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD;QAChB,MAAM,oBAAoB,MAAM,wIAAA,CAAA,QAAK,CAAC,cAAc,CAAC;YAAC,WAAW;QAAI;QACrE,MAAM,oBAAoB,MAAM,6IAAA,CAAA,aAAU,CAAC,cAAc,CAAC;YAAC,QAAQ;QAAK;QACxE,MAAM,cAAc,MAAM,wIAAA,CAAA,QAAK,CAAC,cAAc;QAC9C,MAAM,aAAa,MAAM,uIAAA,CAAA,OAAI,CAAC,cAAc;QAC5C,MAAM,cAAc,MAAM,wIAAA,CAAA,QAAK,CAAC,cAAc;QAC9C,MAAM,gBAAgB,MAAM,6IAAA,CAAA,aAAU,CAAC,cAAc,CAAC;YAAC,QAAQ;QAAI;QAEnE,MAAM,eAAyB;YAC3B;YACA;YACA;YACA;YACA;YACA;QACJ;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAE7B,EAAE,OAAO,KAAU;QACf,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAS,IAAI,OAAO;QAAA,GAAG;YAAC,QAAQ;QAAG;IACjE;AACJ","debugId":null}}]
}