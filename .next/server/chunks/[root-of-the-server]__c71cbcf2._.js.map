{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/model/Item.ts"],"sourcesContent":["import mongoose from 'mongoose';\n\nconst ItemSchema = new mongoose.Schema({\n    _id: {type: String, required: true},\n    name: { type: String, required: true },\n    price: { type: Number, required: true },\n    image: { type: String, required: true },\n    isEnabled: { type: Boolean, default: true }\n})\n\nexport const Item = mongoose.model('Item', ItemSchema);\n\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,KAAK;QAAC,MAAM;QAAQ,UAAU;IAAI;IAClC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,WAAW;QAAE,MAAM;QAAS,SAAS;IAAK;AAC9C;AAEO,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/shared/lib/db.ts"],"sourcesContent":["import mongoose from \"mongoose\"\n\nlet isConnected = false // track the connection status\n\nexport const connectToDB = async () => {\n    if (isConnected) return\n\n    try {\n        await mongoose.connect(\"mongodb+srv://ocraksa:MyMongo123@cluster0.xdar3x8.mongodb.net/v_menu?retryWrites=true&w=majority&appName=Cluster0\", {\n            useNewUrlParser: true,\n            useUnifiedTopology: true,\n        } as any) // casting to `any` if TS complains\n\n        isConnected = true\n        console.log(\"✅ MongoDB connected\")\n    } catch (err) {\n        console.error(\"❌ MongoDB connection error:\", err)\n        throw err\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,cAAc,MAAM,8BAA8B;;AAE/C,MAAM,cAAc;IACvB,IAAI,aAAa;IAEjB,IAAI;QACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,qHAAqH;YACxI,iBAAiB;YACjB,oBAAoB;QACxB,GAAU,mCAAmC;;QAE7C,cAAc;QACd,QAAQ,GAAG,CAAC;IAChB,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/api/cashier/dashboard/menu/%5Bid%5D/route.ts"],"sourcesContent":["import {NextRequest, NextResponse} from \"next/server\";\nimport {Item} from \"@/app/shared/model/Item\";\nimport {connectToDB} from \"@/app/shared/lib/db\";\n\n// Correct structure\nexport async function PATCH(req: NextRequest, context: { params: { id: string } }) {\n    await connectToDB();\n\n    const id = context.params.id; // ✅ Access from context\n    const body = await req.json();\n    const isEnabled = body.isEnabled;\n\n    try {\n        const updatedItem = await Item.findByIdAndUpdate(id, { isEnabled: !isEnabled }, { new: true });\n        return NextResponse.json(updatedItem);\n    } catch (err) {\n        console.error(\"Update error:\", err);\n        return NextResponse.json({ message: \"Failed to update item\", status: 400 });\n    }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAGO,eAAe,MAAM,GAAgB,EAAE,OAAmC;IAC7E,MAAM,CAAA,GAAA,mIAAA,CAAA,cAAW,AAAD;IAEhB,MAAM,KAAK,QAAQ,MAAM,CAAC,EAAE,EAAE,wBAAwB;IACtD,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,MAAM,YAAY,KAAK,SAAS;IAEhC,IAAI;QACA,MAAM,cAAc,MAAM,uIAAA,CAAA,OAAI,CAAC,iBAAiB,CAAC,IAAI;YAAE,WAAW,CAAC;QAAU,GAAG;YAAE,KAAK;QAAK;QAC5F,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAyB,QAAQ;QAAI;IAC7E;AACJ","debugId":null}}]
}