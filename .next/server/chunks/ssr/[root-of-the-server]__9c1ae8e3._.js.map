{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/%5Bres%5D/kitchen/Card.tsx"],"sourcesContent":["'use client';\n\nimport React from \"react\";\nimport {CartItem} from \"@/app/shared/types/CartItem\";\n\ninterface CardProps {\n    orderId: string;\n    table: string;\n    orderedItems: CartItem[];\n    isDone: boolean;\n    onDone: (orderId: string) => void;\n}\n\nconst Card = ({ orderId, table, orderedItems, isDone, onDone }: CardProps) => {\n    return (\n        <div className=\"max-w-[1024px] w-[98%] rounded-2xl overflow-hidden shadow-lg bg-white p-4 my-6\">\n            <div className=\"flex justify-between items-center mb-2\">\n                <h3 className=\"text-xl font-bold text-gray-800\">Table {table}</h3>\n            </div>\n\n            <div className=\"bg-gray-50 rounded-xl p-3 mb-4\">\n                {orderedItems.map((orderedItem, index) => (\n                    <div\n                        key={index}\n                        className=\"flex items-center justify-between gap-2 border-b last:border-none py-2\"\n                    >\n                        <div className=\"flex items-center gap-3\">\n                            <img\n                                src={orderedItem.item.image}\n                                alt={orderedItem.item.name}\n                                className=\"w-10 h-10 object-cover rounded\"\n                            />\n                            <span className=\"text-gray-800\">{orderedItem.item.name}</span>\n                        </div>\n                        <p className=\"text-m font-bold text-gray-600\">x{orderedItem.quantity}</p>\n                    </div>\n                ))}\n            </div>\n            {!isDone && (\n                <button\n                    onClick={() => {\n                        onDone(orderId);\n                    }}\n                    className=\"w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded-xl transition duration-200 cursor-pointer\"\n                >\n                    Mark as Done\n                </button>\n            )}\n        </div>\n    );\n};\n\nexport default Card;\n"],"names":[],"mappings":";;;;AAAA;;AAaA,MAAM,OAAO,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAa;IACrE,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAG,WAAU;;wBAAkC;wBAAO;;;;;;;;;;;;0BAG3D,8OAAC;gBAAI,WAAU;0BACV,aAAa,GAAG,CAAC,CAAC,aAAa,sBAC5B,8OAAC;wBAEG,WAAU;;0CAEV,8OAAC;gCAAI,WAAU;;kDACX,8OAAC;wCACG,KAAK,YAAY,IAAI,CAAC,KAAK;wCAC3B,KAAK,YAAY,IAAI,CAAC,IAAI;wCAC1B,WAAU;;;;;;kDAEd,8OAAC;wCAAK,WAAU;kDAAiB,YAAY,IAAI,CAAC,IAAI;;;;;;;;;;;;0CAE1D,8OAAC;gCAAE,WAAU;;oCAAiC;oCAAE,YAAY,QAAQ;;;;;;;;uBAX/D;;;;;;;;;;YAehB,CAAC,wBACE,8OAAC;gBACG,SAAS;oBACL,OAAO;gBACX;gBACA,WAAU;0BACb;;;;;;;;;;;;AAMjB;uCAEe","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///Users/raksa/Work/Development/Websites/v-menu/src/app/%5Bres%5D/kitchen/page.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState, useRef } from \"react\";\nimport Card from \"./Card\";\nimport { OrderOutput } from \"@/app/shared/types/Order\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Link from \"next/link\";\nimport { useParams } from \"next/navigation\";\n\nexport default function KitchenPage() {\n    const [orders, setOrders] = useState<OrderOutput[]>([]);\n    const previousOrderIdsRef = useRef<string[]>([]);\n    const params = useParams();\n\n    useEffect(() => {\n        const fetchOrders = async () => {\n            try {\n                const response = await axios.get(\"/api/kitchen\");\n                const activeOrders = response.data.filter((order: OrderOutput) => !order.isDone);\n                setOrders(activeOrders);\n                previousOrderIdsRef.current = activeOrders.map((order:OrderOutput) => order._id);\n            } catch (err) {\n                console.error(\"Initial fetch error:\", err);\n            }\n        };\n\n        fetchOrders();\n\n        const intervalId = setInterval(async () => {\n            try {\n                const response = await axios.get(\"/api/kitchen\");\n                const activeOrders = response.data.filter((order: OrderOutput) => !order.isDone);\n\n                const newOrders = activeOrders.filter((order:OrderOutput) => !previousOrderIdsRef.current.includes(order._id));\n                if (newOrders.length > 0) {\n                    toast.info(\"New order received!\", {\n                        position: \"top-center\",\n                        autoClose: 1000,\n                        hideProgressBar: true,\n                        closeOnClick: true,\n                        pauseOnHover: false,\n                        draggable: false,\n                        theme: \"light\",\n                    });\n                }\n\n                setOrders(activeOrders);\n                previousOrderIdsRef.current = activeOrders.map((order:OrderOutput) => order._id);\n            } catch (err) {\n                console.error(\"Polling error:\", err);\n            }\n        }, 2000);\n\n        return () => clearInterval(intervalId);\n    }, []);\n\n    const handleOnDone = async (id: string) => {\n        try {\n            await axios.patch(`/api/kitchen/${id}`);\n            setOrders(prev => prev.filter(order => order._id !== id));\n            toast.success(\"Order marked as done!\", {\n                position: \"top-center\",\n                autoClose: 1000,\n                hideProgressBar: true,\n                closeOnClick: true,\n                pauseOnHover: false,\n                draggable: false,\n                theme: \"light\",\n            });\n        } catch (err) {\n            console.error(\"Failed to mark order as done:\", err);\n        }\n    };\n\n    return (\n        <div className=\"w-full min-h-screen bg-white\">\n            <ToastContainer />\n            <header className=\"header p-2.5\">\n                <p className=\"text-center text-black text-3xl\">V-Menu Kitchen</p>\n            </header>\n            <div className=\"back-button flex justify-end w-full p-4\">\n                <Link href={`/${params.res}/kitchen/history`}>\n                    <button className=\"bg-green-500 hover:bg-green-600 text-white font-semibold py-2 px-4 rounded-xl cursor-pointer\">\n                        View Order History\n                    </button>\n                </Link>\n            </div>\n            <div className=\"chef-card-wrapper flex flex-col justify-center items-center\">\n                {orders.length > 0 ? (\n                    orders.map((order) => (\n                        <Card\n                            key={order._id}\n                            orderId={order._id}\n                            table={order.table}\n                            orderedItems={order.orderedItems}\n                            onDone={handleOnDone}\n                            isDone={order.isDone}\n                        />\n                    ))\n                ) : (\n                    <h1 className=\"mt-[50vh] text-4xl text-center\">No Orders To Display</h1>\n                )}\n            </div>\n        </div>\n    );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AACA;AAEA;AACA;AATA;;;;;;;;;AAWe,SAAS;IACpB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IACtD,MAAM,sBAAsB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAY,EAAE;IAC/C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,cAAc;YAChB,IAAI;gBACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;gBACjC,MAAM,eAAe,SAAS,IAAI,CAAC,MAAM,CAAC,CAAC,QAAuB,CAAC,MAAM,MAAM;gBAC/E,UAAU;gBACV,oBAAoB,OAAO,GAAG,aAAa,GAAG,CAAC,CAAC,QAAsB,MAAM,GAAG;YACnF,EAAE,OAAO,KAAK;gBACV,QAAQ,KAAK,CAAC,wBAAwB;YAC1C;QACJ;QAEA;QAEA,MAAM,aAAa,YAAY;YAC3B,IAAI;gBACA,MAAM,WAAW,MAAM,qIAAA,CAAA,UAAK,CAAC,GAAG,CAAC;gBACjC,MAAM,eAAe,SAAS,IAAI,CAAC,MAAM,CAAC,CAAC,QAAuB,CAAC,MAAM,MAAM;gBAE/E,MAAM,YAAY,aAAa,MAAM,CAAC,CAAC,QAAsB,CAAC,oBAAoB,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG;gBAC5G,IAAI,UAAU,MAAM,GAAG,GAAG;oBACtB,mJAAA,CAAA,QAAK,CAAC,IAAI,CAAC,uBAAuB;wBAC9B,UAAU;wBACV,WAAW;wBACX,iBAAiB;wBACjB,cAAc;wBACd,cAAc;wBACd,WAAW;wBACX,OAAO;oBACX;gBACJ;gBAEA,UAAU;gBACV,oBAAoB,OAAO,GAAG,aAAa,GAAG,CAAC,CAAC,QAAsB,MAAM,GAAG;YACnF,EAAE,OAAO,KAAK;gBACV,QAAQ,KAAK,CAAC,kBAAkB;YACpC;QACJ,GAAG;QAEH,OAAO,IAAM,cAAc;IAC/B,GAAG,EAAE;IAEL,MAAM,eAAe,OAAO;QACxB,IAAI;YACA,MAAM,qIAAA,CAAA,UAAK,CAAC,KAAK,CAAC,CAAC,aAAa,EAAE,IAAI;YACtC,UAAU,CAAA,OAAQ,KAAK,MAAM,CAAC,CAAA,QAAS,MAAM,GAAG,KAAK;YACrD,mJAAA,CAAA,QAAK,CAAC,OAAO,CAAC,yBAAyB;gBACnC,UAAU;gBACV,WAAW;gBACX,iBAAiB;gBACjB,cAAc;gBACd,cAAc;gBACd,WAAW;gBACX,OAAO;YACX;QACJ,EAAE,OAAO,KAAK;YACV,QAAQ,KAAK,CAAC,iCAAiC;QACnD;IACJ;IAEA,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC,mJAAA,CAAA,iBAAc;;;;;0BACf,8OAAC;gBAAO,WAAU;0BACd,cAAA,8OAAC;oBAAE,WAAU;8BAAkC;;;;;;;;;;;0BAEnD,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAM,CAAC,CAAC,EAAE,OAAO,GAAG,CAAC,gBAAgB,CAAC;8BACxC,cAAA,8OAAC;wBAAO,WAAU;kCAA+F;;;;;;;;;;;;;;;;0BAKzH,8OAAC;gBAAI,WAAU;0BACV,OAAO,MAAM,GAAG,IACb,OAAO,GAAG,CAAC,CAAC,sBACR,8OAAC,yIAAA,CAAA,UAAI;wBAED,SAAS,MAAM,GAAG;wBAClB,OAAO,MAAM,KAAK;wBAClB,cAAc,MAAM,YAAY;wBAChC,QAAQ;wBACR,QAAQ,MAAM,MAAM;uBALf,MAAM,GAAG;;;;8CAStB,8OAAC;oBAAG,WAAU;8BAAiC;;;;;;;;;;;;;;;;;AAKnE","debugId":null}}]
}